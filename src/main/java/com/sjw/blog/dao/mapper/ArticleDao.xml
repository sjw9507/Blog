<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjw.blog.dao.ArticleDao">

	<sql id="article_table_all_columns">
		article_id,
		article_user_id,
		article_title,
		article_content,
		article_parent_category_id,
		article_child_category_id,
		article_tag_ids,
		article_view_count,
		article_comment_count,
		article_like_count,
		article_post_time,
		article_update_time,
		article_is_comment,
		article_status,
		article_order
	</sql>

	<select id="countArticle" resultType="Integer">
		SELECT COUNT(*) FROM `article`
		<where>
			<if test="status!=null">
				article_status=#{status}
			</if>
		</where>
	</select>
	
	<select id="countArticleView" resultType="Integer">
        SELECT SUM(article_view_count) FROM article
        <where>
            <if test="status!=null">
                article_status=#{status}
            </if>
        </where>
    </select>
    
    <select id="countArticleComment" resultType="Integer">
        SELECT SUM(article_comment_count) FROM article
        <where>
            <if test="status!=null">
                article_status=#{status}
            </if>
        </where>
    </select>

	<select id="getArticleByPage" resultType="com.sjw.blog.entity.Article">
		SELECT
		<include refid="article_table_all_columns" />
		FROM `article`
		<where>
			<if test="status!=null">
				article_status=#{status}
			</if>
		</where>
		ORDER BY article_status ASC, article_order DESC, article_id DESC
		limit
		#{startPos},#{pageSize}
	</select>

	<select id="countArticleByTag" resultType="Integer">
		SELECT COUNT(*) FROM `article`
		<where>
			article.article_tag_ids = #{tagId} OR
			article.article_tag_ids LIKE
			"${tagId},%" OR
			article.article_tag_ids LIKE "%,${tagId},%" OR
			article.article_tag_ids LIKE "%,${tagId}"
			<if test="status!=null">
				AND article_status=#{status}
			</if>

		</where>

	</select>
	
	<select id="countArticleByCategory" resultType="Integer">
        SELECT count(*)
        FROM  `article`
        <where>
            <if test="status!=null">
                article_status=#{status} AND
            </if>

            article_parent_category_id=#{cateId} OR
            article_child_category_id=#{cateId}
        </where>
    </select>

	<select id="getArticleById" resultType="com.sjw.blog.entity.Article">
		SELECT
		<include refid="article_table_all_columns" />
		FROM `article`
		<where>
			article_id = #{articleId}
			<if test="status!=null">
				and article_status=#{status}
			</if>
		</where>
	</select>

	<select id="listArticleWithSameCategory" resultType="com.sjw.blog.entity.Article">
		SELECT
		<include refid="article_table_all_columns" />
		FROM
		`article`
		<trim prefix="WHERE" prefixOverrides="AND |OR " suffixOverrides="AND |OR">
			<if test="status!=null">
				article_status=#{status} AND
			</if>
			<if test="parentCategoryId!=null">
				article_parent_category_id=#{parentCategoryId} OR
			</if>
			<if test="parentCategoryId!=null">
				article_child_category_id=#{childCategoryId}
			</if>

		</trim>
		ORDER BY article_status ASC, article_order DESC, article_id DESC
		limit
		#{limit}
	</select>

	<select id="listArticleByViewCount" resultType="com.sjw.blog.entity.Article">
		SELECT
		<include refid="article_table_all_columns" />
		FROM
		`article`
		<where>
			<if test="status!=null">
				article_status=#{status}
			</if>
		</where>
		ORDER BY article_view_count DESC,article_order DESC, article_id DESC
		limit #{limit}
	</select>

	<select id="getAfterArticle" resultType="com.sjw.blog.entity.Article">
		SELECT
		<include refid="article_table_all_columns" />
		FROM
		`article`
		<where>
			article_id > #{articleId}
			<if test="status!=null">
				AND article_status=#{status}
			</if>
		</where>
		ORDER BY article_id
		limit 1
	</select>
	
	<select id="getPreArticle" resultType="com.sjw.blog.entity.Article">
		SELECT
		<include refid="article_table_all_columns" />
		FROM
		`article`
		<where>
			article_id &lt; #{articleId}
			<if test="status!=null">
				AND article_status=#{status}
			</if>
		</where>
		ORDER BY article_id
		limit 1
	</select>
	
    <select id="listRandomArticle" resultType="com.sjw.blog.entity.Article">
        SELECT
        <include refid="article_table_all_columns"/>
        FROM
        `article`
        <where>
            <if test="status!=null">
                article_status=#{status}
            </if>
        </where>
        ORDER BY
        RAND()
        limit #{num}
    </select>

    <select id="listArticleByCommentCount" resultType="com.sjw.blog.entity.Article">
        SELECT
        <include refid="article_table_all_columns"/>
        FROM
        `article`
        <where>
            <if test="status!=null">
                article_status=#{status}
            </if>
        </where>
        ORDER BY
        article_comment_count DESC,article_order DESC, article_id DESC
        limit #{num}
    </select>
    
    <select id="getLastUpdateArticle" resultType="com.sjw.blog.entity.Article">
        SELECT
        <include refid="article_table_all_columns"/>
        FROM `article`
        WHERE article_update_time=
        (
          SELECT max(article_update_time) FROM article
        )
    </select>

</mapper>