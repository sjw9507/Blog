<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjw.blog.dao.auto.LinkMapper" >
  <resultMap id="BaseResultMap" type="com.sjw.blog.entity.Link" >
    <id column="link_id" property="linkId" jdbcType="INTEGER" />
    <result column="link_url" property="linkUrl" jdbcType="VARCHAR" />
    <result column="link_name" property="linkName" jdbcType="VARCHAR" />
    <result column="link_image" property="linkImage" jdbcType="VARCHAR" />
    <result column="link_description" property="linkDescription" jdbcType="VARCHAR" />
    <result column="link_owner_nickname" property="linkOwnerNickname" jdbcType="VARCHAR" />
    <result column="link_owner_contact" property="linkOwnerContact" jdbcType="VARCHAR" />
    <result column="link_update_time" property="linkUpdateTime" jdbcType="TIMESTAMP" />
    <result column="link_create_time" property="linkCreateTime" jdbcType="TIMESTAMP" />
    <result column="link_order" property="linkOrder" jdbcType="INTEGER" />
    <result column="link_status" property="linkStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    link_id, link_url, link_name, link_image, link_description, link_owner_nickname, 
    link_owner_contact, link_update_time, link_create_time, link_order, link_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sjw.blog.entity.LinkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from link
    where link_id = #{linkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from link
    where link_id = #{linkId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjw.blog.entity.LinkExample" >
    delete from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjw.blog.entity.Link" >
    insert into link (link_id, link_url, link_name, 
      link_image, link_description, link_owner_nickname, 
      link_owner_contact, link_update_time, link_create_time, 
      link_order, link_status)
    values (#{linkId,jdbcType=INTEGER}, #{linkUrl,jdbcType=VARCHAR}, #{linkName,jdbcType=VARCHAR}, 
      #{linkImage,jdbcType=VARCHAR}, #{linkDescription,jdbcType=VARCHAR}, #{linkOwnerNickname,jdbcType=VARCHAR}, 
      #{linkOwnerContact,jdbcType=VARCHAR}, #{linkUpdateTime,jdbcType=TIMESTAMP}, #{linkCreateTime,jdbcType=TIMESTAMP}, 
      #{linkOrder,jdbcType=INTEGER}, #{linkStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sjw.blog.entity.Link" >
    insert into link
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="linkId != null" >
        link_id,
      </if>
      <if test="linkUrl != null" >
        link_url,
      </if>
      <if test="linkName != null" >
        link_name,
      </if>
      <if test="linkImage != null" >
        link_image,
      </if>
      <if test="linkDescription != null" >
        link_description,
      </if>
      <if test="linkOwnerNickname != null" >
        link_owner_nickname,
      </if>
      <if test="linkOwnerContact != null" >
        link_owner_contact,
      </if>
      <if test="linkUpdateTime != null" >
        link_update_time,
      </if>
      <if test="linkCreateTime != null" >
        link_create_time,
      </if>
      <if test="linkOrder != null" >
        link_order,
      </if>
      <if test="linkStatus != null" >
        link_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="linkId != null" >
        #{linkId,jdbcType=INTEGER},
      </if>
      <if test="linkUrl != null" >
        #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="linkName != null" >
        #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkImage != null" >
        #{linkImage,jdbcType=VARCHAR},
      </if>
      <if test="linkDescription != null" >
        #{linkDescription,jdbcType=VARCHAR},
      </if>
      <if test="linkOwnerNickname != null" >
        #{linkOwnerNickname,jdbcType=VARCHAR},
      </if>
      <if test="linkOwnerContact != null" >
        #{linkOwnerContact,jdbcType=VARCHAR},
      </if>
      <if test="linkUpdateTime != null" >
        #{linkUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="linkCreateTime != null" >
        #{linkCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="linkOrder != null" >
        #{linkOrder,jdbcType=INTEGER},
      </if>
      <if test="linkStatus != null" >
        #{linkStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjw.blog.entity.LinkExample" resultType="java.lang.Integer" >
    select count(*) from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update link
    <set >
      <if test="record.linkId != null" >
        link_id = #{record.linkId,jdbcType=INTEGER},
      </if>
      <if test="record.linkUrl != null" >
        link_url = #{record.linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.linkName != null" >
        link_name = #{record.linkName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkImage != null" >
        link_image = #{record.linkImage,jdbcType=VARCHAR},
      </if>
      <if test="record.linkDescription != null" >
        link_description = #{record.linkDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.linkOwnerNickname != null" >
        link_owner_nickname = #{record.linkOwnerNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.linkOwnerContact != null" >
        link_owner_contact = #{record.linkOwnerContact,jdbcType=VARCHAR},
      </if>
      <if test="record.linkUpdateTime != null" >
        link_update_time = #{record.linkUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.linkCreateTime != null" >
        link_create_time = #{record.linkCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.linkOrder != null" >
        link_order = #{record.linkOrder,jdbcType=INTEGER},
      </if>
      <if test="record.linkStatus != null" >
        link_status = #{record.linkStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update link
    set link_id = #{record.linkId,jdbcType=INTEGER},
      link_url = #{record.linkUrl,jdbcType=VARCHAR},
      link_name = #{record.linkName,jdbcType=VARCHAR},
      link_image = #{record.linkImage,jdbcType=VARCHAR},
      link_description = #{record.linkDescription,jdbcType=VARCHAR},
      link_owner_nickname = #{record.linkOwnerNickname,jdbcType=VARCHAR},
      link_owner_contact = #{record.linkOwnerContact,jdbcType=VARCHAR},
      link_update_time = #{record.linkUpdateTime,jdbcType=TIMESTAMP},
      link_create_time = #{record.linkCreateTime,jdbcType=TIMESTAMP},
      link_order = #{record.linkOrder,jdbcType=INTEGER},
      link_status = #{record.linkStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjw.blog.entity.Link" >
    update link
    <set >
      <if test="linkUrl != null" >
        link_url = #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="linkName != null" >
        link_name = #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkImage != null" >
        link_image = #{linkImage,jdbcType=VARCHAR},
      </if>
      <if test="linkDescription != null" >
        link_description = #{linkDescription,jdbcType=VARCHAR},
      </if>
      <if test="linkOwnerNickname != null" >
        link_owner_nickname = #{linkOwnerNickname,jdbcType=VARCHAR},
      </if>
      <if test="linkOwnerContact != null" >
        link_owner_contact = #{linkOwnerContact,jdbcType=VARCHAR},
      </if>
      <if test="linkUpdateTime != null" >
        link_update_time = #{linkUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="linkCreateTime != null" >
        link_create_time = #{linkCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="linkOrder != null" >
        link_order = #{linkOrder,jdbcType=INTEGER},
      </if>
      <if test="linkStatus != null" >
        link_status = #{linkStatus,jdbcType=INTEGER},
      </if>
    </set>
    where link_id = #{linkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjw.blog.entity.Link" >
    update link
    set link_url = #{linkUrl,jdbcType=VARCHAR},
      link_name = #{linkName,jdbcType=VARCHAR},
      link_image = #{linkImage,jdbcType=VARCHAR},
      link_description = #{linkDescription,jdbcType=VARCHAR},
      link_owner_nickname = #{linkOwnerNickname,jdbcType=VARCHAR},
      link_owner_contact = #{linkOwnerContact,jdbcType=VARCHAR},
      link_update_time = #{linkUpdateTime,jdbcType=TIMESTAMP},
      link_create_time = #{linkCreateTime,jdbcType=TIMESTAMP},
      link_order = #{linkOrder,jdbcType=INTEGER},
      link_status = #{linkStatus,jdbcType=INTEGER}
    where link_id = #{linkId,jdbcType=INTEGER}
  </update>
</mapper>