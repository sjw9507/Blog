<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjw.blog.dao.auto.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.sjw.blog.entity.Article" >
    <id column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="article_user_id" property="articleUserId" jdbcType="INTEGER" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="article_parent_category_id" property="articleParentCategoryId" jdbcType="INTEGER" />
    <result column="article_child_category_id" property="articleChildCategoryId" jdbcType="INTEGER" />
    <result column="article_tag_ids" property="articleTagIds" jdbcType="VARCHAR" />
    <result column="article_view_count" property="articleViewCount" jdbcType="INTEGER" />
    <result column="article_comment_count" property="articleCommentCount" jdbcType="INTEGER" />
    <result column="article_like_count" property="articleLikeCount" jdbcType="INTEGER" />
    <result column="article_post_time" property="articlePostTime" jdbcType="TIMESTAMP" />
    <result column="article_update_time" property="articleUpdateTime" jdbcType="TIMESTAMP" />
    <result column="article_is_comment" property="articleIsComment" jdbcType="INTEGER" />
    <result column="article_status" property="articleStatus" jdbcType="INTEGER" />
    <result column="article_order" property="articleOrder" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sjw.blog.entity.Article" extends="BaseResultMap" >
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    article_id, article_user_id, article_title, article_parent_category_id, article_child_category_id, 
    article_tag_ids, article_view_count, article_comment_count, article_like_count, article_post_time, 
    article_update_time, article_is_comment, article_status, article_order
  </sql>
  <sql id="Blob_Column_List" >
    article_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.sjw.blog.entity.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sjw.blog.entity.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjw.blog.entity.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjw.blog.entity.Article" >
    insert into article (article_id, article_user_id, article_title, 
      article_parent_category_id, article_child_category_id, 
      article_tag_ids, article_view_count, article_comment_count, 
      article_like_count, article_post_time, article_update_time, 
      article_is_comment, article_status, article_order, 
      article_content)
    values (#{articleId,jdbcType=INTEGER}, #{articleUserId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, 
      #{articleParentCategoryId,jdbcType=INTEGER}, #{articleChildCategoryId,jdbcType=INTEGER}, 
      #{articleTagIds,jdbcType=VARCHAR}, #{articleViewCount,jdbcType=INTEGER}, #{articleCommentCount,jdbcType=INTEGER}, 
      #{articleLikeCount,jdbcType=INTEGER}, #{articlePostTime,jdbcType=TIMESTAMP}, #{articleUpdateTime,jdbcType=TIMESTAMP}, 
      #{articleIsComment,jdbcType=INTEGER}, #{articleStatus,jdbcType=INTEGER}, #{articleOrder,jdbcType=INTEGER}, 
      #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sjw.blog.entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="articleUserId != null" >
        article_user_id,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="articleParentCategoryId != null" >
        article_parent_category_id,
      </if>
      <if test="articleChildCategoryId != null" >
        article_child_category_id,
      </if>
      <if test="articleTagIds != null" >
        article_tag_ids,
      </if>
      <if test="articleViewCount != null" >
        article_view_count,
      </if>
      <if test="articleCommentCount != null" >
        article_comment_count,
      </if>
      <if test="articleLikeCount != null" >
        article_like_count,
      </if>
      <if test="articlePostTime != null" >
        article_post_time,
      </if>
      <if test="articleUpdateTime != null" >
        article_update_time,
      </if>
      <if test="articleIsComment != null" >
        article_is_comment,
      </if>
      <if test="articleStatus != null" >
        article_status,
      </if>
      <if test="articleOrder != null" >
        article_order,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="articleUserId != null" >
        #{articleUserId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleParentCategoryId != null" >
        #{articleParentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="articleChildCategoryId != null" >
        #{articleChildCategoryId,jdbcType=INTEGER},
      </if>
      <if test="articleTagIds != null" >
        #{articleTagIds,jdbcType=VARCHAR},
      </if>
      <if test="articleViewCount != null" >
        #{articleViewCount,jdbcType=INTEGER},
      </if>
      <if test="articleCommentCount != null" >
        #{articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="articleLikeCount != null" >
        #{articleLikeCount,jdbcType=INTEGER},
      </if>
      <if test="articlePostTime != null" >
        #{articlePostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleUpdateTime != null" >
        #{articleUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleIsComment != null" >
        #{articleIsComment,jdbcType=INTEGER},
      </if>
      <if test="articleStatus != null" >
        #{articleStatus,jdbcType=INTEGER},
      </if>
      <if test="articleOrder != null" >
        #{articleOrder,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjw.blog.entity.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.articleId != null" >
        article_id = #{record.articleId,jdbcType=INTEGER},
      </if>
      <if test="record.articleUserId != null" >
        article_user_id = #{record.articleUserId,jdbcType=INTEGER},
      </if>
      <if test="record.articleTitle != null" >
        article_title = #{record.articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.articleParentCategoryId != null" >
        article_parent_category_id = #{record.articleParentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.articleChildCategoryId != null" >
        article_child_category_id = #{record.articleChildCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.articleTagIds != null" >
        article_tag_ids = #{record.articleTagIds,jdbcType=VARCHAR},
      </if>
      <if test="record.articleViewCount != null" >
        article_view_count = #{record.articleViewCount,jdbcType=INTEGER},
      </if>
      <if test="record.articleCommentCount != null" >
        article_comment_count = #{record.articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="record.articleLikeCount != null" >
        article_like_count = #{record.articleLikeCount,jdbcType=INTEGER},
      </if>
      <if test="record.articlePostTime != null" >
        article_post_time = #{record.articlePostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.articleUpdateTime != null" >
        article_update_time = #{record.articleUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.articleIsComment != null" >
        article_is_comment = #{record.articleIsComment,jdbcType=INTEGER},
      </if>
      <if test="record.articleStatus != null" >
        article_status = #{record.articleStatus,jdbcType=INTEGER},
      </if>
      <if test="record.articleOrder != null" >
        article_order = #{record.articleOrder,jdbcType=INTEGER},
      </if>
      <if test="record.articleContent != null" >
        article_content = #{record.articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set article_id = #{record.articleId,jdbcType=INTEGER},
      article_user_id = #{record.articleUserId,jdbcType=INTEGER},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      article_parent_category_id = #{record.articleParentCategoryId,jdbcType=INTEGER},
      article_child_category_id = #{record.articleChildCategoryId,jdbcType=INTEGER},
      article_tag_ids = #{record.articleTagIds,jdbcType=VARCHAR},
      article_view_count = #{record.articleViewCount,jdbcType=INTEGER},
      article_comment_count = #{record.articleCommentCount,jdbcType=INTEGER},
      article_like_count = #{record.articleLikeCount,jdbcType=INTEGER},
      article_post_time = #{record.articlePostTime,jdbcType=TIMESTAMP},
      article_update_time = #{record.articleUpdateTime,jdbcType=TIMESTAMP},
      article_is_comment = #{record.articleIsComment,jdbcType=INTEGER},
      article_status = #{record.articleStatus,jdbcType=INTEGER},
      article_order = #{record.articleOrder,jdbcType=INTEGER},
      article_content = #{record.articleContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set article_id = #{record.articleId,jdbcType=INTEGER},
      article_user_id = #{record.articleUserId,jdbcType=INTEGER},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      article_parent_category_id = #{record.articleParentCategoryId,jdbcType=INTEGER},
      article_child_category_id = #{record.articleChildCategoryId,jdbcType=INTEGER},
      article_tag_ids = #{record.articleTagIds,jdbcType=VARCHAR},
      article_view_count = #{record.articleViewCount,jdbcType=INTEGER},
      article_comment_count = #{record.articleCommentCount,jdbcType=INTEGER},
      article_like_count = #{record.articleLikeCount,jdbcType=INTEGER},
      article_post_time = #{record.articlePostTime,jdbcType=TIMESTAMP},
      article_update_time = #{record.articleUpdateTime,jdbcType=TIMESTAMP},
      article_is_comment = #{record.articleIsComment,jdbcType=INTEGER},
      article_status = #{record.articleStatus,jdbcType=INTEGER},
      article_order = #{record.articleOrder,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjw.blog.entity.Article" >
    update article
    <set >
      <if test="articleUserId != null" >
        article_user_id = #{articleUserId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleParentCategoryId != null" >
        article_parent_category_id = #{articleParentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="articleChildCategoryId != null" >
        article_child_category_id = #{articleChildCategoryId,jdbcType=INTEGER},
      </if>
      <if test="articleTagIds != null" >
        article_tag_ids = #{articleTagIds,jdbcType=VARCHAR},
      </if>
      <if test="articleViewCount != null" >
        article_view_count = #{articleViewCount,jdbcType=INTEGER},
      </if>
      <if test="articleCommentCount != null" >
        article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="articleLikeCount != null" >
        article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      </if>
      <if test="articlePostTime != null" >
        article_post_time = #{articlePostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleUpdateTime != null" >
        article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleIsComment != null" >
        article_is_comment = #{articleIsComment,jdbcType=INTEGER},
      </if>
      <if test="articleStatus != null" >
        article_status = #{articleStatus,jdbcType=INTEGER},
      </if>
      <if test="articleOrder != null" >
        article_order = #{articleOrder,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sjw.blog.entity.Article" >
    update article
    set article_user_id = #{articleUserId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_parent_category_id = #{articleParentCategoryId,jdbcType=INTEGER},
      article_child_category_id = #{articleChildCategoryId,jdbcType=INTEGER},
      article_tag_ids = #{articleTagIds,jdbcType=VARCHAR},
      article_view_count = #{articleViewCount,jdbcType=INTEGER},
      article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      article_post_time = #{articlePostTime,jdbcType=TIMESTAMP},
      article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},
      article_is_comment = #{articleIsComment,jdbcType=INTEGER},
      article_status = #{articleStatus,jdbcType=INTEGER},
      article_order = #{articleOrder,jdbcType=INTEGER},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjw.blog.entity.Article" >
    update article
    set article_user_id = #{articleUserId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_parent_category_id = #{articleParentCategoryId,jdbcType=INTEGER},
      article_child_category_id = #{articleChildCategoryId,jdbcType=INTEGER},
      article_tag_ids = #{articleTagIds,jdbcType=VARCHAR},
      article_view_count = #{articleViewCount,jdbcType=INTEGER},
      article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      article_post_time = #{articlePostTime,jdbcType=TIMESTAMP},
      article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},
      article_is_comment = #{articleIsComment,jdbcType=INTEGER},
      article_status = #{articleStatus,jdbcType=INTEGER},
      article_order = #{articleOrder,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
</mapper>