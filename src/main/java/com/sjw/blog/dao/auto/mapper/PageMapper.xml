<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjw.blog.dao.auto.PageMapper" >
  <resultMap id="BaseResultMap" type="com.sjw.blog.entity.Page" >
    <id column="page_id" property="pageId" jdbcType="INTEGER" />
    <result column="page_key" property="pageKey" jdbcType="VARCHAR" />
    <result column="page_title" property="pageTitle" jdbcType="VARCHAR" />
    <result column="page_create_time" property="pageCreateTime" jdbcType="TIMESTAMP" />
    <result column="page_update_time" property="pageUpdateTime" jdbcType="TIMESTAMP" />
    <result column="page_view_count" property="pageViewCount" jdbcType="INTEGER" />
    <result column="page_comment_count" property="pageCommentCount" jdbcType="INTEGER" />
    <result column="page_status" property="pageStatus" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sjw.blog.entity.Page" extends="BaseResultMap" >
    <result column="page_content" property="pageContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    page_id, page_key, page_title, page_create_time, page_update_time, page_view_count, 
    page_comment_count, page_status
  </sql>
  <sql id="Blob_Column_List" >
    page_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.sjw.blog.entity.PageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from page
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sjw.blog.entity.PageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from page
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from page
    where page_id = #{pageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from page
    where page_id = #{pageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjw.blog.entity.PageExample" >
    delete from page
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjw.blog.entity.Page" >
    insert into page (page_id, page_key, page_title, 
      page_create_time, page_update_time, page_view_count, 
      page_comment_count, page_status, page_content
      )
    values (#{pageId,jdbcType=INTEGER}, #{pageKey,jdbcType=VARCHAR}, #{pageTitle,jdbcType=VARCHAR}, 
      #{pageCreateTime,jdbcType=TIMESTAMP}, #{pageUpdateTime,jdbcType=TIMESTAMP}, #{pageViewCount,jdbcType=INTEGER}, 
      #{pageCommentCount,jdbcType=INTEGER}, #{pageStatus,jdbcType=INTEGER}, #{pageContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sjw.blog.entity.Page" >
    insert into page
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pageId != null" >
        page_id,
      </if>
      <if test="pageKey != null" >
        page_key,
      </if>
      <if test="pageTitle != null" >
        page_title,
      </if>
      <if test="pageCreateTime != null" >
        page_create_time,
      </if>
      <if test="pageUpdateTime != null" >
        page_update_time,
      </if>
      <if test="pageViewCount != null" >
        page_view_count,
      </if>
      <if test="pageCommentCount != null" >
        page_comment_count,
      </if>
      <if test="pageStatus != null" >
        page_status,
      </if>
      <if test="pageContent != null" >
        page_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pageId != null" >
        #{pageId,jdbcType=INTEGER},
      </if>
      <if test="pageKey != null" >
        #{pageKey,jdbcType=VARCHAR},
      </if>
      <if test="pageTitle != null" >
        #{pageTitle,jdbcType=VARCHAR},
      </if>
      <if test="pageCreateTime != null" >
        #{pageCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pageUpdateTime != null" >
        #{pageUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pageViewCount != null" >
        #{pageViewCount,jdbcType=INTEGER},
      </if>
      <if test="pageCommentCount != null" >
        #{pageCommentCount,jdbcType=INTEGER},
      </if>
      <if test="pageStatus != null" >
        #{pageStatus,jdbcType=INTEGER},
      </if>
      <if test="pageContent != null" >
        #{pageContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjw.blog.entity.PageExample" resultType="java.lang.Integer" >
    select count(*) from page
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update page
    <set >
      <if test="record.pageId != null" >
        page_id = #{record.pageId,jdbcType=INTEGER},
      </if>
      <if test="record.pageKey != null" >
        page_key = #{record.pageKey,jdbcType=VARCHAR},
      </if>
      <if test="record.pageTitle != null" >
        page_title = #{record.pageTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.pageCreateTime != null" >
        page_create_time = #{record.pageCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pageUpdateTime != null" >
        page_update_time = #{record.pageUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pageViewCount != null" >
        page_view_count = #{record.pageViewCount,jdbcType=INTEGER},
      </if>
      <if test="record.pageCommentCount != null" >
        page_comment_count = #{record.pageCommentCount,jdbcType=INTEGER},
      </if>
      <if test="record.pageStatus != null" >
        page_status = #{record.pageStatus,jdbcType=INTEGER},
      </if>
      <if test="record.pageContent != null" >
        page_content = #{record.pageContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update page
    set page_id = #{record.pageId,jdbcType=INTEGER},
      page_key = #{record.pageKey,jdbcType=VARCHAR},
      page_title = #{record.pageTitle,jdbcType=VARCHAR},
      page_create_time = #{record.pageCreateTime,jdbcType=TIMESTAMP},
      page_update_time = #{record.pageUpdateTime,jdbcType=TIMESTAMP},
      page_view_count = #{record.pageViewCount,jdbcType=INTEGER},
      page_comment_count = #{record.pageCommentCount,jdbcType=INTEGER},
      page_status = #{record.pageStatus,jdbcType=INTEGER},
      page_content = #{record.pageContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update page
    set page_id = #{record.pageId,jdbcType=INTEGER},
      page_key = #{record.pageKey,jdbcType=VARCHAR},
      page_title = #{record.pageTitle,jdbcType=VARCHAR},
      page_create_time = #{record.pageCreateTime,jdbcType=TIMESTAMP},
      page_update_time = #{record.pageUpdateTime,jdbcType=TIMESTAMP},
      page_view_count = #{record.pageViewCount,jdbcType=INTEGER},
      page_comment_count = #{record.pageCommentCount,jdbcType=INTEGER},
      page_status = #{record.pageStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjw.blog.entity.Page" >
    update page
    <set >
      <if test="pageKey != null" >
        page_key = #{pageKey,jdbcType=VARCHAR},
      </if>
      <if test="pageTitle != null" >
        page_title = #{pageTitle,jdbcType=VARCHAR},
      </if>
      <if test="pageCreateTime != null" >
        page_create_time = #{pageCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pageUpdateTime != null" >
        page_update_time = #{pageUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pageViewCount != null" >
        page_view_count = #{pageViewCount,jdbcType=INTEGER},
      </if>
      <if test="pageCommentCount != null" >
        page_comment_count = #{pageCommentCount,jdbcType=INTEGER},
      </if>
      <if test="pageStatus != null" >
        page_status = #{pageStatus,jdbcType=INTEGER},
      </if>
      <if test="pageContent != null" >
        page_content = #{pageContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where page_id = #{pageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sjw.blog.entity.Page" >
    update page
    set page_key = #{pageKey,jdbcType=VARCHAR},
      page_title = #{pageTitle,jdbcType=VARCHAR},
      page_create_time = #{pageCreateTime,jdbcType=TIMESTAMP},
      page_update_time = #{pageUpdateTime,jdbcType=TIMESTAMP},
      page_view_count = #{pageViewCount,jdbcType=INTEGER},
      page_comment_count = #{pageCommentCount,jdbcType=INTEGER},
      page_status = #{pageStatus,jdbcType=INTEGER},
      page_content = #{pageContent,jdbcType=LONGVARCHAR}
    where page_id = #{pageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjw.blog.entity.Page" >
    update page
    set page_key = #{pageKey,jdbcType=VARCHAR},
      page_title = #{pageTitle,jdbcType=VARCHAR},
      page_create_time = #{pageCreateTime,jdbcType=TIMESTAMP},
      page_update_time = #{pageUpdateTime,jdbcType=TIMESTAMP},
      page_view_count = #{pageViewCount,jdbcType=INTEGER},
      page_comment_count = #{pageCommentCount,jdbcType=INTEGER},
      page_status = #{pageStatus,jdbcType=INTEGER}
    where page_id = #{pageId,jdbcType=INTEGER}
  </update>
</mapper>